name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build solution
      run: dotnet build --no-restore --configuration Release
    
    - name: Run unit tests with coverage
      run: |
        dotnet test tests/ZSocialMedia.UnitTests \
          --no-build \
          --configuration Release \
          --verbosity normal \
          --collect:"XPlat Code Coverage" \
          --results-directory ./coverage \
          --logger trx \
          --logger "console;verbosity=detailed" \
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
    
    - name: Run integration tests (if exists)
      run: |
        if [ -d "tests/ZSocialMedia.IntegrationTests" ]; then
          dotnet test tests/ZSocialMedia.IntegrationTests \
            --no-build \
            --configuration Release \
            --verbosity normal \
            --collect:"XPlat Code Coverage" \
            --results-directory ./coverage \
            --logger trx \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        else
          echo "Integration tests project not found, skipping..."
        fi
    
    - name: Upload coverage reports to Codecov
      if: always()
      uses: codecov/codecov-action@v5
      with:
        directory: ./coverage
        fail_ci_if_error: false
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/**/coverage.cobertura.xml
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ./coverage/**/*.xml

  # Code quality and analysis
  code-quality:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Run code analysis
      run: dotnet build --configuration Release --verbosity normal -p:TreatWarningsAsErrors=true
    
    - name: Install dotnet format
      run: dotnet tool install -g dotnet-format
    
    - name: Check code formatting
      run: dotnet format --verify-no-changes --verbosity diagnostic

  # Separate job for security scanning
  security:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Run security audit
      run: dotnet list package --vulnerable --include-transitive
    
    - name: Run dependency check
      run: dotnet list package --outdated